#include <bits/stdc++.h>
using namespace std;

#define endl "\n"
#define ll long long
#define fi first
#define se second
#define sz size()
#define pb push_back
#define vi vector<int>
#define vll vector<ll>
#define vvi vector<vector<int>>
#define pii pair<int, ll>
#define pll pair<ll, ll>
#define FOR(i, a, b) for(int i =a; i <=b; i++)
#define FOD(i, a, b) for(int i =a; i >=b; i--)
#define INF INT_MAX
#define MASK(i) (1LL << (i))
#define BIT(x, i) (((x) >> (i)) & 1)
#define COUNT_ONE(x) __builtin_popcountll((x))
#define COUNT_LEAD_ZERO(x) __builtin_clzll((x))
#define COUNT_TRAIL_ZERO(x) __builtin_ctzll((x))
#define SHOW1(x) cout << #x << " = " << (x) << endl << flush
#define SHOW2(x, y) cout << #x << "=" << (x) << " " << #y << "=" << (y) << endl << flush
#define faster() ios_base::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr);

const int maxn = 5000;
const int MOD = 1e9 + 7;
const int BASE = 256;

string s; 
int n, k;
vector<unordered_set<ll>> setWords; //v[i]: hash cac tu co len = i
set<int> lens;

ll pw[maxn + 5]; //pw[i]: 256 ^ i
ll invPw[maxn + 5]; // pw[i] ^ (MOD - 2)
ll hs[maxn + 5]; //hs[i] hash xau s[1...i]

ll powMod(ll a, ll b){
    if(b == 0) return 1;
    ll half = powMod(a, b / 2);
    ll res = half * half % MOD;
    if(b & 1) res = res * a % MOD;
    return res;
}

void prepare(){
    pw[0] = 1;
    FOR(i, 1, maxn){
        pw[i] = pw[i-1] * BASE % MOD;
    }
    FOR(i, 0, maxn){
        invPw[i] = powMod(pw[i], MOD - 2);
    }
}

ll calcHash(string s){
    ll hs = 0;
    FOR(i, 1, s.sz - 1){
        hs = hs + s[i] * pw[i - 1];
        hs %= MOD;
    }
    return hs;
}

ll calcSegmentHash(int l, int r){
    return (hs[r] - hs[l - 1] + MOD) % MOD * invPw[l - 1] % MOD;
}

void HuyenMay(){   
    //input
    cin >> s;
    n = s.sz, s = " " + s;

    unordered_set<ll> tmp;
    setWords.assign(n + 5, tmp);

    cin >> k;
    while(k--){
        string word; cin >> word;
        int len = word.sz; word = " " + word;
        ll hs = calcHash(word);
        if(len <= n) setWords[len].insert(hs);
        lens.insert(len);
    }

    //process
    hs[0] = 0;
    FOR(i, 1, n){
        hs[i] = hs[i-1] + s[i] * pw[i - 1];
        hs[i] %= MOD;
    }

    ll dp[n + 5] = {0}; //dp[i] so cach ghep de tao thanh xau s[1..i]
    dp[0] = 1;
    FOR(i, 1, n){
        for(auto len : lens){
            if(len > i) break;

            ll segHash = calcSegmentHash(i - len + 1, i);

            if(setWords[len].find(segHash) != setWords[len].end()){
                dp[i] = (dp[i] + dp[i - len]) % MOD;
            }
        }
    }

    cout << dp[n] << endl;
}   


int main(){
    faster();
    prepare();
    int t = 1;
    // cin >> t;
    while(t--){
        HuyenMay();
    }
    return 0;
}

/** HungLam
	  (\(\
	 ( 0.0)
	o_(")(")
**/
/**
⣿⣛⢿⣛⢿⡙⣏⢻⡙⠏⠭⣉⠇⡹⢌⡣⡍⢭⠩⢥⢩⢡⡉⡜⣩⠈⠥⡉⢌⠡⡉⠎⡍⢭⠩⢍⠩⢯⠹⣍⢯⡙⢭⢫⡝⣭⠩⡉⢍⠩⡉⢍⡉⢣⠙⡌⢣⠉⢎⡝⢬⢣⡝⣬⢍⡭⣩⡙⣍⣋⡝⢣⠛⠬⢡⠉⠬⡑⢫⢻⡹⣍⡛⢿⣿⡏⠥⡉⢌⠡
⣷⣫⢾⡹⢮⡽⡘⢡⠘⣌⠲⣄⢺⡵⣋⠷⣹⢎⡗⣆⠒⡂⠖⠬⠤⡙⠤⡑⢌⠢⡑⢊⡜⢢⡝⢦⠳⣤⢣⠴⣠⢌⣄⢢⡑⡠⢃⠜⡠⢃⠜⡠⠘⡄⢣⠘⠤⣉⣦⢞⣭⣣⣼⡴⣎⣶⣥⣽⣦⣷⣼⢧⣛⣤⢂⠍⠤⡁⢎⡡⢓⠬⡙⢎⠳⢋⢦⠱⣌⢂
⣷⣫⢿⡝⣧⡓⣌⢡⠋⡔⢣⢎⡷⣱⡙⢮⠵⣎⠽⣎⠳⣌⠘⡄⢣⠘⠤⡑⢌⠢⣁⠣⡜⡡⠞⡥⢛⡔⢫⠞⡱⢎⡜⣣⢝⡱⣋⠞⡡⢊⠔⡡⢃⠜⣠⡿⣞⣿⡾⣿⢿⣿⣿⣽⣿⣿⢿⣟⣿⡽⣯⢿⣯⣟⡯⣞⠤⡑⢌⡒⢏⠶⡹⢎⠷⣊⢶⠡⢆⠂
⣿⡭⣗⡻⣞⠽⣈⢇⡛⡜⢣⢏⠶⣡⠏⣝⠺⣌⠳⣜⢣⡜⣰⠘⡤⣉⠆⡱⢈⠒⡄⠳⡐⢥⢫⡔⢣⠜⣥⢮⡵⣎⣴⡡⢎⡱⢡⠊⡔⢡⠊⣔⣥⣾⢿⣹⣽⣶⢿⣽⡾⣷⣿⣿⣿⣻⡿⣯⢿⡽⣯⣟⡾⣽⣻⡽⣾⣑⠪⡔⢪⡒⣥⢊⢦⡡⢎⡲⢈⠆
⣯⢳⡽⣫⣝⠲⠠⠎⡴⣉⠶⣈⠧⣡⢋⠬⡓⣌⠳⣌⠣⡜⣡⠛⡴⢉⠆⡱⢈⠒⡌⠣⡍⢆⡻⣜⢧⣛⡬⢷⢻⡽⣞⡽⣳⣌⢣⡙⣄⢣⣼⣟⣷⣯⣿⣿⣿⣾⣯⣷⣿⣿⣽⣯⣟⠿⣽⢏⣿⣱⢳⢮⢽⡘⢧⣻⡱⢻⢧⡙⢦⣡⢁⢎⡐⢩⠘⡄⠣⠌
⣯⢳⡽⣱⢏⣇⢣⠚⡴⣡⢾⣷⣿⣶⣿⣾⣷⣬⣷⣌⠳⡘⢤⢋⠴⡁⢎⠰⡁⢎⡐⢣⠜⡢⢝⣮⢳⣹⣾⣶⣦⣶⣤⣦⣥⣬⣡⣃⢬⣿⣿⣾⣿⣿⣿⣿⣿⡿⠿⠻⠟⠿⠿⢿⣿⣿⡽⣞⡷⣯⣟⣾⣳⣟⣧⢷⣹⢧⣯⡝⡦⢹⢎⠮⣙⠧⣛⠜⡱⢈
⡷⣏⠷⣭⢚⡬⢣⢏⠶⣡⢟⡼⣳⣟⣾⣽⣯⢿⣿⣿⢡⡙⢆⡑⢪⠐⡌⢢⠑⢢⠘⠤⢊⡕⢺⡜⣧⢏⡷⣭⢯⡝⣯⡝⢯⡻⡝⣱⣿⣿⣿⣿⣿⣿⣿⣿⠣⠐⡁⠂⠌⡐⢀⠂⡘⢿⣟⣯⣟⣷⣻⣞⣷⣻⣞⣯⣟⡿⣾⣽⣳⡅⢺⢦⡱⣎⡔⢣⠔⡡
⢝⡾⣹⢎⡳⣚⠵⣊⢿⡱⢎⢷⣻⡾⣽⡾⣯⣻⣿⣿⢠⡙⠦⣙⢢⠑⡌⢢⠉⢆⡉⢆⠣⡘⢥⣛⢾⣿⢿⡿⣿⣿⣳⡽⣣⢗⣸⣿⣿⣿⣿⣿⣿⣿⣿⠃⠄⠡⢀⠁⢂⠐⡀⢂⠐⡘⣿⢿⣞⣯⣷⣻⣞⣷⣻⢾⣽⣻⢷⣯⢷⣏⡆⢯⠱⣋⢞⡳⢎⡵
⢎⡷⣣⢞⡱⢫⡜⣡⣏⢷⣩⢺⣵⡿⣯⢿⣳⡽⣷⣿⢠⡙⢢⡑⢪⠐⡌⢢⠉⢆⡘⢄⠣⡑⢦⡙⣾⣿⢯⣟⡷⣿⣻⡵⣋⠦⣿⣿⣿⣿⣿⣿⣿⣽⡃⠌⠠⢁⠂⠌⡀⢂⡐⣀⠂⠄⢻⡏⣿⣽⣞⣷⣻⢾⡽⣯⣿⡽⣿⢾⣟⡾⣵⢪⡷⣷⠾⣶⢷⡾
⡿⣼⢳⢎⡱⢣⢞⡵⣮⣟⣯⢧⠻⣿⡽⣿⣳⣟⣿⣿⢠⡙⢆⡙⢦⠑⡌⢢⠉⢆⡘⢄⠣⣘⠢⡑⣯⣿⣻⢾⡽⣿⣟⠶⣁⢻⣿⣿⣿⣿⣿⣿⠇⡟⢣⠈⡐⠠⢈⠐⣈⠛⠭⡉⠏⡙⠺⡟⢿⣽⡾⣿⡽⣯⣟⡷⣿⣿⣻⢿⣯⣟⣧⠧⣿⣾⡿⣜⠧⢂
⡷⣭⣛⢎⡖⣹⢾⡽⣞⣿⣞⣯⢷⡹⣟⣯⣷⣞⣿⣷⢢⡙⢆⡙⢢⠑⡌⢢⠉⢆⡘⢄⠣⢄⠣⡘⡼⣿⠽⣯⢻⣿⣽⢣⡃⢾⣿⣿⣿⣿⣿⣟⣈⠧⡀⠡⢀⠁⠂⠔⡠⢉⠐⣀⣂⠄⠡⣟⢸⣹⢿⣿⣻⡷⣯⣟⣿⣿⣻⣿⣯⢿⣞⡯⢿⣽⡿⣜⡃⠆
⣻⢶⡙⡮⠜⣽⣫⢿⣟⣷⣻⣞⣯⢷⡹⣿⢾⡽⣿⣷⢢⡙⢆⡙⢦⠑⡌⢢⠉⢆⡘⢄⠣⢌⠢⢡⢹⣯⢻⡜⣯⣿⢯⡳⢌⣻⣿⣿⣿⣿⣿⠏⣽⣷⣧⠐⠠⢈⠐⡈⠰⣬⡷⢶⣮⣾⣥⣻⡸⢼⢺⣿⣯⣟⣷⣻⣿⣿⣿⣽⣿⣟⡾⣝⣻⢾⣟⡰⡁⠎
⣯⢞⡵⡹⣘⣧⣟⣿⣻⣞⣷⣻⣞⣯⢷⡘⢯⣟⣿⡷⢢⡙⢦⡙⢦⠘⡄⢣⠘⠤⡘⢄⠣⢌⠢⡁⢾⣜⣧⡻⣵⡿⣿⡱⢂⢽⣿⣿⣿⡧⢿⠂⣛⣿⣿⠆⡁⢂⠐⠄⠋⠔⡈⢲⣿⣿⣿⣿⣿⣿⣼⣿⣯⣿⣞⣿⢆⢹⣿⣟⣿⣾⣻⣟⡼⣻⣷⠰⡁⠎
⣯⢾⡱⢣⣜⡾⣽⡾⣟⣾⣳⣟⡾⣽⣻⢮⡱⣞⣿⡿⢰⡉⢦⡙⢦⠘⡄⢣⠘⠤⡑⢌⠒⡌⢢⠑⢮⡿⣞⡷⣹⣿⣻⢥⠃⢾⣿⣿⣿⣿⠹⡇⢸⣍⢻⡱⢀⠂⡘⠠⢁⠂⠄⣳⢻⡿⣿⢿⣿⠣⢼⣿⡿⣞⣯⡿⣌⢺⣿⣿⣿⡷⣿⡽⣼⣻⣧⢣⠑⡌
⣟⡮⣝⢣⠾⣽⡿⣽⣻⣞⡷⣯⣟⡷⣯⢿⡵⡜⣿⣿⢰⡉⢦⡙⢦⠘⡄⢣⠘⠤⡑⢌⠲⣌⢣⠉⡌⣉⠡⣉⠳⣉⠙⡊⢱⢈⣿⣿⣿⣿⡷⡈⢄⠓⡦⠃⠄⠂⠄⡁⠂⠌⠠⢙⢦⠹⡱⢚⠏⡰⣻⣿⣿⢿⣿⠗⡬⢻⣿⣿⣿⢿⣽⣟⢶⣻⣽⢂⠣⡐
⡿⡼⣡⢏⠿⣽⡿⣽⣳⢯⣟⡷⣯⢿⡽⣯⣟⡾⡜⣿⢰⡉⢦⡙⢦⠘⡄⢣⠘⠤⡑⢌⠒⡌⢦⠑⡌⢄⠣⢄⠳⢠⠙⡄⢣⠘⣼⣿⣿⣿⣿⠐⣌⠳⣄⠡⢈⠐⠠⢀⠡⢈⠐⡠⢌⠡⢁⠊⠴⣡⣿⣿⣿⣿⡿⡘⣜⣽⣿⣿⣿⣯⢿⣟⡎⢙⠣⡉⠖⡡
⣛⡵⣫⢞⣽⡿⣽⣳⢯⣟⡾⣽⢯⡿⣽⣳⢯⡿⣵⢎⠳⡘⢦⡙⢆⠘⡄⢣⠘⠤⡑⢌⠢⡙⢤⠃⡜⢠⠃⡌⢢⢁⠚⡄⢣⠘⡰⣿⣿⣿⣿⡌⠄⠡⢈⠐⠠⢈⠐⡀⠂⢌⠒⡡⢊⠐⠠⢉⡲⠝⣰⣿⢿⡽⣣⣵⣿⣿⣿⣿⣿⢾⣿⣻⠆⡡⢆⠡⡃⠔
⣯⢳⡝⣮⣿⣻⡽⡏⠿⣾⡽⣯⢿⣽⣳⢯⡿⣽⣻⢮⢇⡙⢦⡙⢆⠈⠄⡁⢊⠐⡁⢊⠐⡁⢂⠡⠈⠄⠡⢈⠐⡈⢂⠘⡀⢃⠰⣿⣿⣿⣿⣷⡈⠐⠠⢈⠐⡀⠂⠄⡁⢂⠐⡀⠂⠌⡐⠠⢁⢲⡿⢫⣿⣽⣿⣿⣿⣿⣿⣿⣿⢯⣿⣯⡇⡘⢄⠣⡘⠄
⢯⡳⡝⣾⡷⣿⣽⣃⠳⣌⢻⣽⡻⢎⡝⢪⣽⣳⢯⣟⣯⡜⢢⡙⢆⠙⢢⠙⢢⠙⡰⢉⠎⡱⢉⠎⡱⢉⠎⡡⢋⠜⡡⢊⡑⢊⠱⡟⣿⣿⣿⣿⣿⣆⡁⢂⠒⠄⡁⢂⠐⡀⠂⠄⡁⠂⠄⡁⢎⡝⢲⣹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣳⣿⡳⠄⠦⠰⠄⢆
⣧⢹⢼⣿⣻⢷⣯⣇⢣⠘⠦⡘⠥⢃⠌⡳⣾⣽⣻⣞⣷⣛⢦⢉⠆⡘⠤⡉⢆⠱⣀⠣⡘⢄⠣⡘⢄⠣⡘⣤⢣⣜⡤⢃⡜⢠⢃⡇⢻⣿⣿⣿⣿⣿⣷⣄⠈⡐⢀⠂⡐⠠⢁⡂⢤⢃⠞⣩⠒⣌⢣⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣾⢯⣷⣟⡌⢢⠑⡌⢂
⢶⣩⣾⡿⣽⣻⢞⡓⢎⡑⢢⠑⡌⠢⣌⠱⣟⣾⣳⣟⡾⣽⢯⡆⢣⠘⠤⡑⢌⠒⡄⢣⠘⡄⢣⠘⡄⢳⡿⣝⣯⢻⣽⡷⡈⢆⢸⢃⢹⣿⣿⣿⣿⣿⣿⣿⣧⣴⣦⣶⣷⢉⠧⡘⢦⡉⠞⡤⢋⠴⣹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣻⣯⣿⣾⣄⢣⠘⣄
⢲⣣⣿⡛⡥⢃⠎⡘⠤⡘⢄⠣⡘⠵⡠⢙⡘⢷⣻⢾⡽⣯⣟⡾⣄⠍⢢⠑⡌⠒⡌⢢⠑⡎⠐⢂⠐⢫⡽⣞⢮⣟⣾⡳⡍⢂⢾⠀⢪⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣏⠆⡬⡑⢦⡙⡜⡰⣉⠖⣹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡷⣟⣷⣿⡞⣬⣳⢮
⢣⣟⣷⣿⣶⡿⣾⣴⣧⠒⠆⢦⣍⣦⣑⣂⡜⣨⣛⣯⣟⡷⣯⣟⠞⢎⠄⠣⢌⠱⡈⢆⠱⡸⢤⠈⡄⣹⢞⣭⠷⣞⣷⡟⡴⣉⡎⠄⢣⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢇⠚⡰⣉⠦⡱⢌⡱⢌⡚⡔⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢿⣯⣿⢿⡼⣯⣷
⣜⣾⢿⣳⢯⣟⣷⣻⣧⠩⣘⢯⡿⣽⣻⢿⣽⣻⡽⣾⣽⣫⠷⣉⠎⠸⡌⡱⢈⠆⡱⢈⠦⡑⢆⠱⡀⠽⠾⠭⠿⣽⣞⡿⢰⢱⡋⠔⣹⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⡟⠌⡬⠱⢌⠲⣑⢊⡔⢣⠜⡈⠤⢈⠻⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⣾⢣⠙⠤⢉
⣼⣻⡿⣽⣻⣞⣷⣻⣧⠃⡜⣯⣟⡷⣯⣟⣾⣳⣟⡷⣯⢋⠲⡡⢎⠱⢸⡐⡡⢊⡔⢣⠜⡰⢈⠆⡱⢊⠧⡙⠶⢡⠒⡌⢣⡟⢤⣻⣿⣿⣿⣿⣿⣿⣟⣻⢋⢵⠲⣉⠖⣡⢋⡌⠳⣌⠲⠘⡁⢢⠘⠄⢊⠐⠠⢀⠉⡉⢉⠛⢿⣿⣿⣿⣿⣻⡆⣍⢢⣁
⡶⣿⣻⢷⣻⣞⣷⣻⣧⣧⣟⡷⣯⣟⣷⣻⣞⡷⣯⠟⣀⢊⡑⣈⢂⡑⢢⢱⡐⡡⣘⢂⡚⣐⢃⡚⡐⢊⠒⡐⣈⢂⡑⣈⡽⣨⣿⣿⣿⣿⣿⣿⣿⡟⢦⢣⢋⠴⡡⢌⡜⡰⠂⡌⠱⡀⢆⠑⡈⠄⡈⠐⠠⢈⠐⡀⢂⠐⠠⠈⠄⡈⢿⣿⣿⡿⡥⢆⠤⡀
⡽⣟⣯⣟⣷⣻⣞⣷⣻⢾⣭⣟⣷⣻⣞⡷⣯⡟⢣⢚⡤⠳⣌⡱⢎⡱⢣⢎⡴⢱⠌⡶⣑⢎⠶⡱⣍⢫⡍⢳⡜⣢⠳⣜⣷⣿⣿⣿⣿⣿⣿⣿⣿⡙⣎⢧⢋⠞⡱⠊⠔⡡⠁⠄⠡⡐⢂⠐⡀⠂⠄⡁⠂⠄⢂⠐⠠⠈⠄⡁⢂⠐⡀⢻⣿⣿⣿⢬⢤⡡
⣸⣿⣻⣞⣷⣻⣞⡷⣯⣟⡾⣽⣞⡷⣯⣟⠷⣉⠖⣣⠜⡳⢤⡙⣬⢃⡏⢶⡘⡆⢹⡒⠭⢎⣣⠳⣌⢣⡚⢥⢎⡱⣹⣾⣿⣿⣿⣿⣿⣿⣿⡿⢣⡑⢎⠦⣉⠎⠡⢈⠐⠠⠁⠌⡀⠇⡀⠂⠄⡁⠂⠄⠡⠈⠄⡈⠄⡁⢂⠐⡀⢂⠐⠨⣿⣿⣿⡞⢦⡹
⢾⣻⣷⣻⣞⡷⣯⣟⡷⣯⣟⡷⣯⣟⡷⢩⡒⣍⢚⡤⢋⡴⢣⡱⢆⡫⡜⢦⡹⣼⠀⣏⢧⡹⣐⢫⠜⢦⡙⡖⢪⢵⣿⣿⣿⣿⣿⣿⣿⣿⠏⡔⢣⡙⢌⠲⢁⠊⡐⠠⠈⠄⡁⠂⠄⠱⡀⢁⠂⢄⠡⠈⠄⡁⢂⠐⠠⠐⡀⢂⠐⠠⢈⠐⣿⣿⣿⣿⢣⡜
⣏⢿⣞⡷⣯⣟⡷⣯⣟⡷⣯⣟⣷⠫⣔⢣⠕⣎⠲⣼⣱⣜⣣⣕⣫⡖⣭⢃⡔⣠⢆⣈⠁⠓⡙⠮⣚⣥⠳⣜⢣⣿⣿⣿⣿⣿⣿⣿⠟⡡⠚⠌⠡⠈⠄⡂⠄⠂⠄⠡⢈⠐⡈⠔⡈⠄⢣⠀⠌⢢⠀⡁⢂⠐⠠⠈⠄⠡⠐⠠⢈⠐⠠⢈⣿⣿⣿⣯⡗⡸
⣟⣮⢻⣽⣳⢯⣟⡷⣯⣟⣷⣻⣇⠳⣌⠮⡜⣌⠳⣽⣻⣞⣯⣟⣷⢻⣽⣻⣞⣷⠋⠄⢋⠑⠒⠔⠤⣈⠙⡙⠯⢿⣿⣿⣿⣿⠟⡁⠊⠄⡉⠄⠡⢈⠢⠁⠌⡑⢈⠐⡀⢂⠐⠠⡐⠈⠄⡙⢌⣳⠀⡐⠠⠈⠄⠡⠈⠄⡁⠂⠄⡈⠐⢨⣿⣿⣿⣯⣗⡱
⡿⣮⢷⣭⣻⣟⡾⣽⣳⣿⣾⣿⡇⣹⠰⣓⠼⣌⠳⡽⢶⡹⢾⣿⣿⣿⣿⣷⣿⣾⣏⠾⡴⣌⡔⣈⠐⡀⢂⠐⡀⠂⠌⢻⡿⢁⠂⠄⡁⢂⠐⡈⠐⡀⢂⠁⠆⡐⢀⠂⡐⠠⢈⠐⠠⢁⠂⡐⠌⠒⠤⣀⠡⠈⠄⠡⢈⠐⠠⢁⠂⠄⡁⢺⣿⣿⣿⣷⣯⢶
⣹⢯⣟⣾⣳⢯⣟⡷⣯⢷⣿⣿⡇⢲⡙⣤⠛⡴⢩⡟⣭⢻⣽⡿⣿⣻⢿⣟⣯⡟⠠⠉⠌⡉⠑⠠⢁⠐⡀⠂⠄⠡⠈⠄⡐⢄⠈⡐⢀⢂⠐⠠⢁⠐⠠⢈⠐⠠⢂⠐⠠⢁⠂⠌⡐⢀⢂⠜⠠⠁⠆⠠⢉⠒⢌⡐⠠⢈⠐⠠⢈⠐⡀⢿⣿⣿⣿⣷⣿⣻
⢮⣛⢾⣳⣯⢿⡽⣿⣿⣿⢾⣿⡇⢇⡳⢔⡫⡜⢥⣻⡜⣣⢾⣿⣳⢿⣻⣯⣿⢿⣥⢫⣖⣤⠃⠆⠄⠂⠄⠡⠈⠄⡁⢂⠐⡈⢆⠐⠠⠈⠄⡁⠂⠌⡐⠠⢈⠐⠠⢈⠐⠠⢈⠐⡀⢂⡜⠠⢁⠘⡄⢁⠂⠌⠠⢈⠑⢂⠊⠴⠠⢂⠐⢻⣿⣿⣿⣿⣿⣿
⣏⢯⢳⡝⣾⣯⢿⣽⣿⡿⣯⣿⡇⢮⠱⢎⠵⢪⢱⡳⡜⡥⢿⣯⣿⣿⣯⡷⣿⣻⣷⠃⠌⠠⢉⠐⡈⠐⡈⠄⡁⢂⠐⡀⢂⠐⡈⢸⣗⡃⢆⠠⡁⠆⠠⢁⠂⡌⠐⠠⢈⠐⡀⢂⠰⢣⠜⡁⢢⠑⠄⠂⠌⠠⢁⠂⠌⠠⠈⠄⡁⠂⢌⣾⣿⣿⣿⣿⣿⣾
⣜⣎⢧⣞⣽⣞⡟⣾⣽⣻⣽⣿⡎⢲⡙⣬⠓⣭⠲⡽⣌⢳⣻⣟⣾⡿⣯⣟⡷⣿⡏⠜⣜⠳⣎⠶⣠⢃⡐⠠⠐⡀⢂⠐⡀⢂⠐⢸⠼⡍⠊⢖⡰⢌⡒⢌⡒⠤⢁⠂⠄⢂⠰⣈⢣⢃⠎⡠⢃⠌⠠⠁⠌⡐⠠⠈⠄⠡⢈⠐⠠⢁⣾⣿⣿⣿⣿⣿⣯⣟
⡷⣞⡷⣾⣻⢎⣿⣳⢿⣻⣾⣿⡇⡣⢕⢆⡛⡔⢫⠷⣌⠲⣽⣞⣷⣿⣳⣯⣟⡷⣯⡘⢤⠫⣔⢣⡕⢫⠔⣣⡑⣄⢂⠐⡀⠂⠌⣼⣏⠃⠌⠠⠙⡎⠸⢆⡹⢀⠣⣈⠰⣌⠲⡡⢎⡜⢠⡑⠠⠈⠄⡁⠂⠄⠡⠈⠄⡁⠂⠌⡐⣸⣿⣿⣿⣟⣿⣿⡷⣯
⢿⣽⣻⢷⣯⣟⡾⣽⢯⣿⣿⣿⡇⡹⡌⠮⢴⢩⢣⡟⡤⢛⣼⣟⡾⣿⣟⣷⢯⣿⡽⣟⣧⡳⢌⠣⡜⣡⠚⡤⢓⡌⣗⠺⣤⣣⣜⡷⡎⠐⡈⠄⣑⠂⡁⢂⠙⠪⡱⣌⠳⣌⢣⡑⢎⡜⠢⠐⠡⢈⠐⠠⠁⠌⠠⢁⠂⠄⡁⠂⢴⣿⣿⣿⢷⣻⣿⣿⣟⢷
⠳⡞⢿⢿⡾⣽⣻⣽⣻⢿⣿⣿⡇⢵⢊⡝⣆⢋⠶⣹⢆⡙⣾⣯⣟⣷⣻⣞⣯⡷⣿⣻⢾⡝⣯⢖⡱⢢⡙⡔⢣⠜⣬⢓⠦⣿⣿⣳⢉⢆⡐⢸⡰⢀⠐⠠⢈⠐⠠⢈⠑⠌⠓⡘⠃⠜⡡⢉⡐⠠⠈⠄⠡⢈⠐⠠⢈⠐⠠⣉⠞⠛⠿⣿⢯⣷⣻⡽⣮⣳
⠦⣘⡜⣮⣿⣳⢯⡶⣿⡿⣿⣿⡝⡢⢏⡴⢪⢍⠞⣵⢊⠴⣹⣿⢾⣳⣟⣾⣳⣟⣷⣻⢷⣻⣞⣯⡗⢣⠜⣌⢣⢚⡴⣋⢾⣿⣷⢯⡜⢢⡑⢣⠇⠠⢈⠐⠠⢈⠐⠠⠈⠄⡑⠤⣁⠂⠄⡑⠌⡓⡌⠠⢁⠂⠌⡐⠠⠈⢄⢃⠺⣟⢶⣌⢻⣯⣷⣿⣷⢯
⣿⣳⢿⣯⣷⣯⡿⣽⢶⣻⢿⣿⡧⣙⢎⡴⢋⡜⢮⡝⡎⡜⣹⡿⢯⣷⢯⣟⣿⡾⣯⣟⣯⢷⣻⡽⢌⡣⠞⡤⢃⠎⢶⡙⣮⠙⣎⢣⠚⣥⢊⠵⡈⠐⠠⢈⠐⠠⠈⠄⡁⢂⠐⠠⢀⠣⠐⡀⢂⡐⢡⠂⠄⡈⠐⠠⠁⠌⡜⣼⡆⢹⡆⢿⣆⢹⣿⡿⣝⡫
⣫⣽⡿⣾⣟⣾⣿⡿⣿⣯⣟⣿⡧⢍⠶⣘⢇⡺⣡⢟⡴⣉⢿⣽⣻⡾⣟⡿⣿⣿⣳⣯⣟⡿⢯⠓⣌⢳⡹⡰⣉⠞⡦⣙⠶⣉⢆⢣⡙⢤⢋⠞⠠⢁⠂⠄⡈⠄⡁⢂⠐⠠⢈⠐⡀⢂⠡⠐⠠⠘⠤⡉⢆⠠⢁⠂⡁⡾⢡⣿⣏⡄⢣⢚⣿⡄⣿⣟⣧⢿
⣽⣷⣻⢧⣿⣻⡽⣷⣣⣿⣞⣿⣇⢫⡜⡱⢎⡵⢊⡿⡰⢩⢾⡿⣽⡿⣽⡽⣳⢯⣿⡽⣿⡞⡅⢣⢌⢣⢳⡱⣌⠚⡴⣉⠾⣑⠎⢦⡙⢦⡉⢎⠐⠠⢈⠐⡀⢂⠐⠠⢈⠐⡀⢂⠐⡀⢂⠁⢂⠁⢢⠑⠌⠒⡀⢂⣼⠃⣿⢼⡷⢸⡀⢎⡿⠄⣻⣟⡾⣟
⣿⢾⣯⣟⣾⣽⣿⣳⣟⡾⣽⣾⡇⣇⢚⠵⣩⠖⡭⣞⠥⣋⢾⣟⡿⣽⣷⣻⣽⣻⣾⣟⣿⣳⠈⠆⡌⢂⠣⢱⣎⠓⡰⢡⢏⡇⡚⢤⡙⠦⡙⢆⠈⡐⢀⠂⡐⠠⢈⠐⡀⢂⠐⡀⢂⠐⠠⠈⠄⡈⠄⠩⢀⠡⠐⣰⣿⠀⣿⢺⣿⠰⡇⠌⡟⢰⡿⣽⣻⡽
⣿⣻⢷⣻⢯⡿⣟⡿⣿⣿⣿⣿⡗⡬⢍⡞⣡⢞⡱⣏⡖⣡⢿⣻⡼⢧⣛⢿⣻⢿⣽⣾⢯⣿⣷⣌⡰⢁⠎⡔⢎⠰⢡⢋⢾⠰⣉⠦⡙⢆⠱⣂⠐⡀⢂⠐⠠⢁⠂⡐⢀⠂⡐⢀⠂⠌⠠⢁⠂⡐⢈⠐⡀⢂⢡⣿⣿⣧⠘⢯⣿⡐⣏⠰⢰⡿⣹⣗⢯⣟
⣿⣻⢯⡿⣿⡽⣞⡽⣯⣿⢿⣿⡧⢱⢎⡼⠱⢎⡱⣏⠖⣡⢾⡿⣽⣏⡟⡾⢭⣛⣾⣻⣿⣾⣳⣟⡿⣷⠎⡜⢢⢁⢃⠎⣇⠳⣌⠲⣉⢆⠳⠌⡆⠐⠠⢈⠐⡀⢂⠐⡀⢂⠐⠠⠈⠄⡁⢂⠐⡀⢂⡐⢰⠼⣿⢿⣿⡿⣟⣦⢤⡥⣔⢻⡄⣿⡳⢎⡳⣮
⣾⡽⣯⣟⣷⣻⣽⣻⣽⣯⣿⣿⣇⠓⡮⢜⡹⢬⠱⣏⡳⢌⢾⡿⣷⢯⡿⣽⣳⡽⡶⢯⣻⢿⣿⣯⡟⢞⡱⢌⠡⢎⠢⣙⢆⠳⣌⠳⡌⠦⡉⠖⣨⢃⠐⡀⢂⠐⡀⢂⠐⠠⠈⠄⡁⢂⠐⡀⢂⠄⣣⢜⠣⠒⡈⢿⣟⣿⣻⣽⣎⣷⡩⣾⠆⣸⣿⣭⡷⣟
⠥⣫⢕⡛⡞⡽⢳⠟⡷⢯⢾⣿⡧⢹⡘⣥⢋⠶⣙⢮⡓⡜⣺⢿⣽⣻⡽⣷⢯⣷⣟⣯⣟⣯⢿⣽⣚⠆⡘⢄⠣⢌⠢⡍⢎⡱⢌⠳⣌⢣⡙⣌⠲⡌⢆⠐⡀⢂⠐⠠⠈⠄⡁⢂⠰⡀⢎⠴⡡⢎⡱⢎⡑⠠⠐⡈⢿⣿⣟⡷⣯⢞⣷⣹⠇⣼⣷⣯⢿⣽
⠴⣡⢎⡴⣡⠜⣡⢋⡜⣡⠛⠞⢧⠣⡝⡆⢏⡎⡱⢏⡳⡘⢽⠻⢾⢳⢿⣽⣻⢷⣻⣟⣾⡿⣯⣿⢷⣮⣴⣎⣔⣈⠖⡩⢆⡱⢊⠵⣈⠦⡱⢌⠳⡌⡘⡄⠐⠠⠈⠤⣑⢤⠱⣌⠲⡙⣌⠲⡑⢎⠔⡡⠄⡁⢂⠐⡈⢿⣾⣽⣳⢯⣷⢯⡀⣿⣳⣯⢿⣽
⡜⣡⠞⣰⠣⣝⢢⠳⣘⢆⠻⡜⢦⡛⡼⣘⢣⡜⣱⡉⢖⡩⢆⠫⡜⣌⠒⠦⡙⢎⠵⣩⢳⠻⣝⣫⢟⡻⣟⠿⡷⡌⢧⡑⢎⠴⣉⠖⡡⢎⡱⢊⠵⣘⠴⢁⡌⠴⣉⠖⡡⢎⡱⢌⢣⠱⣌⠣⠁⠌⠂⠄⢣⠐⡀⢂⠐⡈⢳⣯⣟⡿⣞⡿⣽⣻⡽⣯⢿⣹
**/